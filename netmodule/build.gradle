apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.csv
    defaultConfig {
        minSdkVersion rootProject.msv
        targetSdkVersion rootProject.tsv
        versionCode rootProject.vc
        versionName rootProject.vns
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField('String', "HOST_NAME", "$rootProject.HOST_PRODUCT")
            buildConfigField('String', "LANS", "$rootProject.HOST_LANS")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField('String', "HOST_NAME", "$rootProject.HOST_TEXT")
            buildConfigField('String', "LANS", "$rootProject.HOST_LANS")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {//lambda
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    // RetroFit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    // RetroFit使用GSON的适配器
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitGson"
    // RetroFit使用RxJava的适配器
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitAdapterRxjava"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpInterceptor"
    // RxAndroid
    implementation "io.reactivex:rxandroid:$rootProject.rxAndroid"
}
